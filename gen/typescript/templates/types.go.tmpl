{{define "types"}}
{{if .Messages}}
  {{range .Messages}}
    {{if .Type | isEnum}}
      {{$enumName := .Name}}
      {{range .Fields}}
        // {{$enumName}}_{{.Name}} = {{.Type}} {{.Value}}
      {{end}}
    {{end}}
    {{if .Type | isStruct  }}
      export interface {{.Name | interfaceName}} {
        {{range .Fields}}
          {{.Name | exportedField}}{{.Optional | optional}}: {{.Type | fieldType}}
        {{end}}
      }

      export class {{.Name}} implements {{.Name | interfaceName}} {
        private _data: {{.Name | interfaceName}}
        constructor(_data?: {{.Name | interfaceName}}) {
          this._data = {}
          if (_data) {
            {{range .Fields}}
              this._data['{{.Name | exportedField}}'] = _data['{{.Name | exportedField}}']
            {{end}}
          }
        }
        public toJSON(): object {
          return this._data
        }
      }
    {{end}}
  {{end}}
{{end}}
{{if .Services}}
  {{range .Services}}
    export interface {{.Name | serviceInterfaceName}} {
      {{range .Methods}}
        {{.Name}}: ({{.Inputs | methodInputs}}) => {{.Outputs | methodOutputs}}
      {{end}}
    }
  {{end}}
{{end}}
{{end}}
