webrpc = v1

name = hello-webrpc
version = v0.0.1


import
  - ./blah.ridl
  - ./abc.json


# this is a comment
# yep
enum Kind: uint32
  - USER = 1             # comment
  - ADMIN = 2            # comment..

# or.. just..
enum Kind: uint32
  - USER                 # aka, = 0
  - ADMIN                # aka, = 1


message Empty


message Notice


message GetUserRequest
  - userID: uint64


message User
  - ID: uint64
    + json = id
    + go.tag.db = id

  - username: string
    + json = USERNAME
    + go.tag.db = username

  - role: string
    + go.tag.db = -

  - createdAt?: timestamp
    + json = created_at
    + go.tag.json = created_at,omitempty
    + go.tag.db = created_at


message Role
  - name: string

  - users: map<uint64,User>

  - perms: []string # comment

  - other: map<uint64,map<string,string>> # comment


message Notice
  - msg: string


service ExampleService

  # comment can go here
  # too .. :)
  - Ping() => (status: bool)

  - GetUser(req: GetUserRequest) => (user: User)

  - Recv(req: stream string)

  - Send() => (resp: stream string)

  - SendAndRecv(req: stream string) => (resp: stream string)

  - Broadcast() => (resp: stream Notice)

  -	VerifyUsers(seq: int32, header?: map<string,[]string>, ids: []uint64) => (code: bool, ids: []bool)
	
  - MoreTest(n: uint64, stuff: []map<uint64,string>, etc: string) => (code?: bool)
