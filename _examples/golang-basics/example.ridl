webrpc = v1             # version of webrpc schema format (ridl or json)

name = example          # name of your backend app
version = v0.0.1        # version of your schema
              

enum Kind: uint32
  - USER
  - ADMIN

enum Intent: string
  - openSession
  - closeSession
  - validateSession

struct Empty

# User struct
#
# More information about user struct
struct User
  - id: uint64
    + json = id
    + go.field.name = ID
    + go.tag.db = id

  - username: string
    + json = USERNAME
    + go.tag.db = username

  - role: string
    + go.tag.db = -

  - kind: Kind
    + json = kind

  - intent: Intent
    + json = intent

struct SearchFilter
  - q: string

struct Version
  - webrpcVersion: string
  - schemaVersion: string
  - schemaHash: string

struct ComplexType
  - meta: map<string,any>
  - metaNestedExample: map<string,map<string,uint32>>
  - namesList: []string
  - numsList: []int64
  - doubleArray: [][]string
  - listOfMaps: []map<string,uint32>
  - listOfUsers: []User
  - mapOfUsers: map<string,User>
  - user: User


error 1000 UserNotFound "User not found" HTTP 404
error 2000 Unauthorized "Unauthorized access" HTTP 401
error 3000 PermissionDenied "Permission denied" HTTP 403


service ExampleService
  @internal
  - Ping()
  @internal
  - Status() => (status: bool)
  @internal
  - Version() => (version: Version)
  @deprecated:GetUserV2
  @internal
  - GetUser(header: map<string,string>, userID: uint64) => (code: uint32, user: User)
  @public
  @auth:"X-Access-Key,S2S,Cookies"
  - GetUserV2(header: map<string,string>, userID: uint64) => (code: uint32, user: User, profile: string)
  @public
  - FindUser(s: SearchFilter) => (name: string, user: User)
  @public
  - GetIntents() => (intents: []Intent)
  @public
  - CountIntents(userId: uint64) => (count: map<Intent,uint32>)

service ExampleServiceV2
  - Ping()
  - Status() => (status: bool)

service AdminService
  @public
  @deprecated:Auth
  - AuthOld() => (jwt: string)
  @public
  - Auth() => (jwt: string, role: string)
  @internal
  - Status() => (status: bool)
  @internal
  - Version() => (version: Version)